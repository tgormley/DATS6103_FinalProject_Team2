"""
## Context: 
The Diabetes prediction dataset is a collection of medical and demographic data from patients, along with their diabetes status (positive or negative). 
The data includes features such as age, gender, body mass index (BMI), hypertension, heart disease, smoking history, HbA1c level, and blood glucose level. 
This dataset will be used to build machine learning models to predict diabetes in patients based on their medical history and demographic information. 
This can be useful for healthcare professionals in identifying patients who may be at risk of developing diabetes and in developing personalized treatment plans. 
Additionally, the dataset will be used by researchers to explore the relationships between various medical and demographic factors and the likelihood of developing diabetes.

## Objectives/SMART Questions:
  * What are the primary risk factors (e.g., blood glucose level, BMI, age, hypertension) for diabetes in this population, and how accurately can they predict the likelihood of a diabetes diagnosis?
  * Are there any notable differences in diabetes prevalence based on gender, age, or smoking history? For example, does smoking history combined with high blood glucose level increase the risk?
  * How does the distribution of BMI and HbA1c levels differ between those with and without diabetes?
  * How sensitive are the models to changes in certain variables (e.g., slight increases in blood glucose or BMI)? Can we identify an actionable threshold for intervention?

## Dataset :

The data contains patient details, lab measurements and binary diabetes status.
* **gender** - Patient gender
* **age** - Age of the patient
* **hypertension** - 0-No, 1-Yes
* **heart_disease** - 0-No, 1-Yes
* **smoking_history** - never, current, not current, former, No Info
* **BMI** - Body Mass Index
* **HbA1c_level** - HbA1c
* **blood_glucose_level** - Blood glucose level

* **diabetes** - 0-No, 1-Yes
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# algorithms to use
from sklearn.linear_model import LogisticRegression

"""### Read the dataset"""

#reading the dataset
df = pd.read_csv('diabetes_prediction_dataset.csv')

df.head()

"""### Printing the information"""

df.info()

"""**Observations:**
- There are 100000 observations and 9 columns.
- All the columns have 100000 non-null values i.e. there are no missing values in the data.
"""

print(df.columns)

"""**Let's check the unique values in each column**"""

#checking unique values in each column
unique_counts = df.nunique()
print(unique_counts)

"""**Observations:**
- No columns have only 1 unique value in them, so no need to drop any columns.
- On the basis of number of unique values in each column and the data description, we can identify the continuous and categorical columns in the data.

Let's define lists for numerical and categorical columns to apply explore them separately.
"""

# Change binary 0 and 1 data to categorical 'no' and 'yes'
df['hypertension'] = df['hypertension'].replace({0:'no', 1:'yes'})
df['heart_disease'] = df['heart_disease'].replace({0:'no', 1:'yes'})
df['diabetes'] = df['diabetes'].replace({0:'no', 1:'yes'})



#%%
df['gender'] = df.apply(
    lambda row: 'Male' if row['gender_Male'] == 1 else ('Other' if row['gender_Other'] == 1 else 'Female'), axis=1
)

print(df['gender'].value_counts())


#%%
sns.countplot(data=df, x='gender', hue='diabetes')
plt.title('Diabetes Prevalence by Gender')
plt.show()


#%%
df['age_group'] = pd.cut(df['age'], bins=[0, 20, 40, 60, 80], labels=['Young', 'Young-adult', 'Adult', 'Elderly'])

# Group by age group and calculate diabetes prevalence
age_group_prevalence = df.groupby('age_group')['diabetes'].mean()
print("Diabetes prevalence by age group:\n", age_group_prevalence)

# Visualize the prevalence
sns.barplot(x=age_group_prevalence.index, y=age_group_prevalence.values)
plt.title('Diabetes Prevalence by Age Group')
plt.ylabel('Prevalence')
plt.show()



# %%
smoking_categories = ['smoking_history_current', 'smoking_history_ever', 
                      'smoking_history_former', 'smoking_history_never', 
                      'smoking_history_not current']

# Calculate diabetes prevalence for each smoking category
smoking_diabetes_prevalence = {
    category: df.groupby(category)['diabetes'].value_counts(normalize=True).unstack().get(1, 0) 
    for category in smoking_categories
}

# Convert prevalence data to a DataFrame for visualization
prevalence_df = pd.DataFrame(smoking_diabetes_prevalence).T
prevalence_df.columns = ['No Diabetes', 'Diabetes']
prevalence_df['Smoking Category'] = prevalence_df.index

# Prepare the data for visualization
prevalence_df = prevalence_df.melt(id_vars='Smoking Category', 
                                   value_vars=['No Diabetes', 'Diabetes'], 
                                   var_name='Diabetes Status', value_name='Prevalence')

# Plot diabetes prevalence for each smoking category
plt.figure(figsize=(10, 6))
sns.barplot(data=prevalence_df, x='Smoking Category', y='Prevalence', hue='Diabetes Status')
plt.title('Diabetes Prevalence by Smoking History Categories')
plt.xticks(rotation=45)
plt.ylabel('Prevalence')
plt.xlabel('Smoking History')
plt.legend(title='Diabetes Status')
plt.show()
